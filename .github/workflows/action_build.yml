name: JARVIS-Tools github action
on: [push, pull_request]

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: "3.10"
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Lint
        shell: bash -l {0}
        run: |
            conda install flake8 pycodestyle pydocstyle
            flake8 --ignore E203,W503 --exclude=examples,tests --statistics --count --exit-zero jarvis
            pycodestyle --ignore E203,W503 --exclude=examples,testfiles jarvis
            pydocstyle --match-dir=core --match-dir=io --match-dir=io --match-dir=ai --match-dir=analysis --match-dir=db --match-dir=tasks --count jarvis
      
      - name: Run pytest
        shell: bash -l {0}
        run: |
            conda install pytest coverage codecov
            python setup.py develop
            coverage run -m pytest
            coverage report -m -i
            codecov
            codecov --token="b61081a0-39de-44a8-8a9c-97d4be82af6d"
            rm POSCAR* *.png
            



# name: JARVIS-Tools github action

# on: [push, pull_request]

# jobs:
#   checks:
#     name: Checks
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash -l {0}
#     strategy:
#       matrix:
#         python-version: ["3.10"]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}

#     - uses: actions/cache@v2
#       with:
#         path: ${{ env.pythonLocation }}
#         key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

#     - name: Install requirements
#       run: |
#         source ~/.bashrc
#         echo "begin: PATH=$PATH;"
#         find . -type f > before_test_files.txt
#         conda env create -f environment.yml
#         conda activate my_jarvis
#         conda install pandas numpy matplotlib phonopy scikit-learn --quiet
#         pip install --upgrade pip
#         pip install pycodestyle flake8 pydocstyle coverage pytest codecov qiskit==0.41.1
#         flake8 --ignore E203,W503 --exclude=examples,tests --statistics --count --exit-zero jarvis
#         pycodestyle --ignore E203,W503 --exclude=examples,testfiles jarvis
#         pydocstyle --match-dir=core --match-dir=io --match-dir=io --match-dir=ai --match-dir=analysis --match-dir=db --match-dir=tasks --count jarvis
                
#         #python setup.py develop
#         #pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt -e .
#         #conda install -c ambermd pytraj
#         #pip install numpy scipy matplotlib
#         #pip install -r dev-requirements.txt
        
#         pip install -e .
#         echo 'CONDA LIST'
#         conda list

#         echo 'PIP FREEZE'
#         pip freeze

#         #echo 'PYTEST-COV'
#         #pytest --cov-config=.coveragerc --cov=jarvis -n 2

#         coverage run -m pytest
#         coverage report -m -i
#         codecov
#         codecov --token="b61081a0-39de-44a8-8a9c-97d4be82af6d"
#         find . -type f > after_test_files.txt
#         #comm -13 <(sort before_test_files.txt) <(sort after_test_files.txt) > new_files.txt
#         #cat new_files.txt | xargs rm
#         #rm before_test_files.txt after_test_files.txt new_files.txt

#         # git clone https://github.com/QEF/q-e.git
#         # cd q-e
#         # ./configure
#         # make pw

# jobs:
#   checks:
#     name: Checks
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.9","3.10"]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}

#     - uses: actions/cache@v2
#       with:
#         path: ${{ env.pythonLocation }}
#         key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

#     - name: Install requirements
#       run: |
#         python setup.py develop
#         pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt -e .
#         #conda install -c ambermd pytraj
#         echo 'CONDA LIST'
#         conda list

#         echo 'PIP FREEZE'
#         pip freeze

#         #echo 'PYTEST-COV'
#         #pytest --cov-config=.coveragerc --cov=jarvis -n 2


#         coverage run -m pytest
#         coverage report -m -i
#         codecov
#         codecov --token="b61081a0-39de-44a8-8a9c-97d4be82af6d"
#         # git clone https://github.com/QEF/q-e.git
#         # cd q-e
#         # ./configure
#         # make pw



#jobs:
#   miniconda:
#     name: Miniconda ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#         matrix:
#             os: ["ubuntu-latest"]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: conda-incubator/setup-miniconda@v2

#         with:
#           activate-environment: test

#           python-version: 3.8
#           auto-activate-base: false
#       - shell: bash -l {0}
#         run: |
#           conda info
#           conda list

#       - uses: actions/cache@v2
#         with:
#           path: ~/.cache/pip
#           key: ${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

#       - name: Run pytest
#         shell: bash -l {0}
#         run: |
#             python setup.py develop
#             #pip uninstall qiskit
#             # pip install qiskit ase  numpy==1.18.5 scipy==1.4.1 matplotlib>=3.0.0 phonopy==2.8.1 coverage lightgbm==2.1.0  flask joblib networkx scikit-learn pandas pennylane==0.14.1 dgl tqdm  codecov torch keras tensorflow==2.3.0  pytest pytest-cov bokeh pytest-xdist
#             # pip install git+https://github.com/aspuru-guzik-group/tequila.git
#             # pip install -r requirements-for-ci-only.txt
#             # pip install -r dev-requirements.txt
#             pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt -e .
#             echo 'CONDA LIST'
#             conda list

#             echo 'PIP FREEZE'
#             pip freeze
#             #echo 'PYTEST-COV'
#             #pytest --cov-config=.coveragerc --cov=jarvis -n 2
#             coverage run -m pytest
#             coverage report -m
#             codecov
#             codecov --token="b61081a0-39de-44a8-8a9c-97d4be82af6d"
#             # git clone https://github.com/QEF/q-e.git
#             # cd q-e
#             # ./configure
#             # make pw
